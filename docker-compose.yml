version: '3'
services:
  article-api:
    build: ./node-postgres
    working_dir: /app
    ports:
      - "8080:3000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      RABBITMQ_URL: 'amqp://rabbitmq'
    volumes:
      - ./node-postgres:/app
      - /app/node_modules
  node:
    build: ./node
    working_dir: /app
    environment:
      RABBITMQ_URL: 'amqp://rabbitmq'
    volumes:
      - ./node:/app
      - /app/node_modules 
    command: /app/wait.sh rabbitmq 5672
  postgres:
    build: ./node-postgres/postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sqoin
    working_dir: /app
    volumes:
      - ./python-mysql:/app
      - ./python-mysql/mariadb:/docker-entrypoint-initdb.d
      - ./python-mysql/data:/var/lib/mysql
    ports:
      - "3307:3306"
    command:  mysqld
  python:
    build: ./python-mysql
    volumes:
      - ./python-mysql:/app
    command: /app/wait.sh
    ports:
      - "8081:8080"
  article-api-fassade:
    build: ./node-queries-filter
    ports:
      - "9091:3000"
    working_dir: /app
    volumes:
      - ./node-queries-filter:/app
      - /app/node_modules
    command: node index.js
  article-auth:
    build: ./node-auth
    working_dir: /app
    volumes:
      - ./node-auth:/app
      - /app/node_modules
    ports:
      - "9092:3000"
    command: /app/wait.sh mongodb 27017
    environment:
      DATABASE_URL: mongodb://mongodb:27017
      DATABASE_NAME: users
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
  rabbitmq:
    image: rabbitmq:3.9.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

    
  